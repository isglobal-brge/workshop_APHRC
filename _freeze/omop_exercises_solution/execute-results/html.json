{
  "hash": "8670b22bbb6f7afe9344549d4b35fbe0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DataSHIELD OMOP Practical Exercises\"\nsubtitle: \"Learning to explore and analyze OMOP data with DataSHIELD\"\nfreeze: true\nformat: \n  html:\n    code-copy: true\n    toc: true\n    toc-depth: 3\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  error: true\n---\n\n<a href=\"#\" onclick=\"event.preventDefault(); fetch('https://raw.githubusercontent.com/isglobal-brge/workshop_DSWB/main/omop_exercises_solution.R').then(response => response.blob()).then(blob => { const url = window.URL.createObjectURL(blob); const a = document.createElement('a'); a.style.display = 'none'; a.href = url; a.download = 'omop_exercises_solution.R'; document.body.appendChild(a); a.click(); window.URL.revokeObjectURL(url); }); return false;\" class=\"btn btn-primary btn-sm\">\n<i class=\"bi bi-download\"></i> Run the solution yourself!\n</a>\n\n# Solution\n\n## Setup\n\nFirst, let's load the required libraries and configure SSL settings:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(DSI)\nlibrary(DSOpal)\nlibrary(dsBaseClient)\nlibrary(dsOMOPClient)\nlibrary(dsOMOPHelper)\n\n# Configure SSL settings (for self-signed certificates)\nlibrary(httr)\nhttr::set_config(httr::config(ssl_verifypeer = 0L, ssl_verifyhost = 0L))\n```\n:::\n\n\n# Exercise 1: Server Connection and Initial Data Exploration\n\nLet's connect to the mystery dataset and see what we can discover!\n\n## Exercise 1: Connect to the server and explore the data structure\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a connection to the OMOP DataSHIELD server\nbuilder <- newDSLoginBuilder()\nbuilder$append(server=\"aphrc\",\n               url=\"https://44.201.204.234:9090\",\n               user=\"administrator\",\n               password=\"password\",\n               driver = \"OpalDriver\",\n               profile = \"omop\")\n\nlogindata <- builder$build()\nconns <- datashield.login(logins=logindata)\n\n# Create a dsOMOPHelper instance\no <- ds.omop.helper(\n  connections = conns,\n  resource = \"omop.study_1\", \n  symbol = \"data\"\n)\n\n# Check the initial data summary\nds.summary(\"data\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n$aphrc$class\n[1] \"data.frame\"\n\n$aphrc$`number of rows`\n[1] 188\n\n$aphrc$`number of columns`\n[1] 11\n\n$aphrc$`variables held`\n [1] \"person_id\"            \"gender_concept_id\"    \"year_of_birth\"       \n [4] \"month_of_birth\"       \"day_of_birth\"         \"birth_datetime\"      \n [7] \"race_concept_id\"      \"ethnicity_concept_id\" \"location_id\"         \n[10] \"provider_id\"          \"care_site_id\"        \n```\n\n\n:::\n:::\n\n\n# Exercise 2: Who Are We Studying?\n\nLet's investigate the characteristics of our study population.\n\n## Exercise 2: Who Are We Studying?\n\n### Task 2.1: Gender distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First Clue - Gender Distribution\nds.table(\"data$gender_concept_id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Data in all studies were valid \n\nStudy 1 :  No errors reported from this study\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$output.list\n$output.list$TABLE_rvar.by.study_row.props\n                      study\ndata$gender_concept_id aphrc\n                female     1\n                NA       NaN\n\n$output.list$TABLE_rvar.by.study_col.props\n                      study\ndata$gender_concept_id aphrc\n                female     1\n                NA         0\n\n$output.list$TABLE_rvar.by.study_counts\n                      study\ndata$gender_concept_id aphrc\n                female   188\n                NA         0\n\n$output.list$TABLES.COMBINED_all.sources_proportions\ndata$gender_concept_id\nfemale     NA \n     1      0 \n\n$output.list$TABLES.COMBINED_all.sources_counts\ndata$gender_concept_id\nfemale     NA \n   188      0 \n\n\n$validity.message\n[1] \"Data in all studies were valid\"\n```\n\n\n:::\n:::\n\n\n**Observation**: All participants are female! This is our first clue.\n\n### Task 2.2: Age distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Second Clue - Age Distribution\nds.assign(\n  toAssign = \"2025 - data$year_of_birth\",\n  newobj = \"age\",\n  datasources = conns\n)\n\n# Age statistics\nds.mean(\"age\", datasources = conns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Mean.by.Study\n      EstimatedMean Nmissing Nvalid Ntotal\naphrc      37.37234        0    188    188\n\n$Nstudies\n[1] 1\n\n$ValidityMessage\n      ValidityMessage \naphrc \"VALID ANALYSIS\"\n```\n\n\n:::\n\n```{.r .cell-code}\nds.quantileMean(\"age\", datasources = conns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      5%      10%      25%      50%      75%      90%      95%     Mean \n30.00000 31.00000 34.00000 37.00000 40.00000 43.30000 46.65000 37.37234 \n```\n\n\n:::\n:::\n\n\n**Observation**: Women of reproductive age (roughly 30-45)\n\n### Task 2.3: Sample size\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sample Size\nds.dim(\"data\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`dimensions of data in aphrc`\n[1] 188  11\n\n$`dimensions of data in combined studies`\n[1] 188  11\n```\n\n\n:::\n:::\n\n\nWe have 188 female participants of reproductive age. What might they have in common?\n\n# Exercise 3: What Was Measured?\n\nNow let's explore what types of data were collected.\n\n## Exercise 3: What Was Measured?\n\n### Task 3.1: Available conditions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore Conditions (Diagnoses)\ncond_concepts <- o$concepts(\"condition_occurrence\")\ncond_concepts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n  concept_id          concept_name\n1    4239471 Postpartum depression\n2   37312479  Antenatal depression\n```\n\n\n:::\n:::\n\n\n**Reveal**: Depression during and after pregnancy! This is a maternal mental health study.\n\n### Task 3.2: Clinical measurements\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore Measurements\nmeas_concepts <- o$concepts(\"measurement\")\nmeas_concepts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n  concept_id                         concept_name\n1    4164838 Edinburgh postnatal depression scale\n```\n\n\n:::\n:::\n\n\nThe Edinburgh Postnatal Depression Scale - a standard tool for screening maternal depression\n\n### Task 3.3: Social and demographic factors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore Observations\nobs_concepts <- o$concepts(\"observation\")\nobs_concepts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n  concept_id                         concept_name\n1          0                  No matching concept\n2    4052017                Religious affiliation\n3    4053609                       Marital status\n4    4075500                  Number in household\n5    4128030                   Delivery procedure\n6    4164838 Edinburgh postnatal depression scale\n7   42528763           Highest level of education\n8   44804285                           Employment\n```\n\n\n:::\n:::\n\n\n**Key factors**: Employment, marital status, household size, religion, education  \nThese social determinants can influence mental health outcomes!\n\n# Exercise 4: Building Your Analysis Dataset\n\nLet's retrieve the variables we need for our analysis.\n\n## Exercise 4: Building Your Analysis Dataset\n\n### Task 4.1: Retrieving Edinburgh Postnatal Depression Scale\n\n\n::: {.cell}\n\n```{.r .cell-code}\no$auto(tables=\"measurement\", \n       concepts=4164838,\n       columns=\"value_as_number\")\n\n# Check data structure after adding Edinburgh scale\nds.summary(\"data\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n$aphrc$class\n[1] \"data.frame\"\n\n$aphrc$`number of rows`\n[1] 188\n\n$aphrc$`number of columns`\n[1] 12\n\n$aphrc$`variables held`\n [1] \"person_id\"                                           \n [2] \"gender_concept_id\"                                   \n [3] \"year_of_birth\"                                       \n [4] \"month_of_birth\"                                      \n [5] \"day_of_birth\"                                        \n [6] \"birth_datetime\"                                      \n [7] \"race_concept_id\"                                     \n [8] \"ethnicity_concept_id\"                                \n [9] \"location_id\"                                         \n[10] \"provider_id\"                                         \n[11] \"care_site_id\"                                        \n[12] \"edinburgh_postnatal_depression_scale.value_as_number\"\n```\n\n\n:::\n:::\n\n\nâœ“ **Added**: edinburgh_postnatal_depression_scale.value_as_number\n\n### Task 4.2: Retrieving social determinants\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Employment status\no$auto(tables=\"observation\",\n       concepts=44804285,\n       columns=\"value_as_concept_id\")\n\n# Other social factors (marital status, household size, religious affiliation)\no$auto(tables=\"observation\",\n       concepts=c(4053609, 4075500, 4052017),\n       columns=\"value_as_concept_id\")\n\n# Education level\no$auto(tables=\"observation\",\n       concepts=42528763,\n       columns=\"value_as_concept_id\")\n\n# Current variables in our dataset\ncurrent_vars <- ds.colnames(\"data\")[[1]]\ncurrent_vars\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"person_id\"                                           \n [2] \"gender_concept_id\"                                   \n [3] \"year_of_birth\"                                       \n [4] \"month_of_birth\"                                      \n [5] \"day_of_birth\"                                        \n [6] \"birth_datetime\"                                      \n [7] \"race_concept_id\"                                     \n [8] \"ethnicity_concept_id\"                                \n [9] \"location_id\"                                         \n[10] \"provider_id\"                                         \n[11] \"care_site_id\"                                        \n[12] \"edinburgh_postnatal_depression_scale.value_as_number\"\n[13] \"employment.value_as_concept_id\"                      \n[14] \"religious_affiliation.value_as_concept_id\"           \n[15] \"marital_status.value_as_concept_id\"                  \n[16] \"number_in_household.value_as_concept_id\"             \n[17] \"highest_level_of_education.value_as_concept_id\"      \n```\n\n\n:::\n:::\n\n\nâœ“ **Added social factors**: employment, marital_status, number_in_household, religious_affiliation\n\n### Task 4.3: Retrieving depression diagnoses\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Retrieve the Diagnoses\no$auto(tables=\"condition_occurrence\",\n       concepts=c(4239471, 37312479),\n       columns=\"condition_occurrence_id\")\n\n# Final check\nds.summary(\"data\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n$aphrc$class\n[1] \"data.frame\"\n\n$aphrc$`number of rows`\n[1] 188\n\n$aphrc$`number of columns`\n[1] 19\n\n$aphrc$`variables held`\n [1] \"person_id\"                                           \n [2] \"gender_concept_id\"                                   \n [3] \"year_of_birth\"                                       \n [4] \"month_of_birth\"                                      \n [5] \"day_of_birth\"                                        \n [6] \"birth_datetime\"                                      \n [7] \"race_concept_id\"                                     \n [8] \"ethnicity_concept_id\"                                \n [9] \"location_id\"                                         \n[10] \"provider_id\"                                         \n[11] \"care_site_id\"                                        \n[12] \"edinburgh_postnatal_depression_scale.value_as_number\"\n[13] \"employment.value_as_concept_id\"                      \n[14] \"religious_affiliation.value_as_concept_id\"           \n[15] \"marital_status.value_as_concept_id\"                  \n[16] \"number_in_household.value_as_concept_id\"             \n[17] \"highest_level_of_education.value_as_concept_id\"      \n[18] \"antenatal_depression.condition_occurrence_id\"        \n[19] \"postpartum_depression.condition_occurrence_id\"       \n```\n\n\n:::\n:::\n\n\n### Summary of Retrieved Variables\n\n**Clinical Measurement**:\n\n- Edinburgh Postnatal Depression Scale (continuous score)\n\n**Social/Demographic Factors**:\n\n- Employment status\n- Marital status\n- Number in household\n- Religious affiliation\n- Education level\n\n**Clinical Diagnoses**:\n\n- Antenatal depression (during pregnancy)\n- Postpartum depression (after delivery)\n\n# Exercise 5: The Data Transformation Challenge\n\nThe depression diagnoses are stored as IDs. Let's understand why we need to transform them.\n\n## Exercise 5: The Data Transformation Challenge\n\nThe depression diagnoses are stored as condition_occurrence_id values (long ID numbers). We need to transform these into analyzable boolean (0/1) variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's see what columns we have now\ncurrent_cols <- ds.colnames(\"data\")[[1]]\ndepression_cols <- grep(\"depression.*condition_occurrence_id\", current_cols, value = TRUE)\n# Depression-related columns:\ndepression_cols\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"antenatal_depression.condition_occurrence_id\" \n[2] \"postpartum_depression.condition_occurrence_id\"\n```\n\n\n:::\n:::\n\n\n# Exercise 6: Converting OMOP IDs to Boolean Variables\n\nHere's how we transform the condition IDs into analyzable format:\n\n## Exercise 6: Converting OMOP IDs to Boolean Variables\n\nHere's how we transform the condition IDs into analyzable format:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to convert OMOP IDs to boolean variables\nconvert_to_boolean <- function(table, variable_name, id_type, conns) {\n  \n  # Step 1: Construct the full variable name\n  full_variable_name <- paste0(table, \"$\", variable_name, \".\", id_type)\n  \n  # Step 2: Convert to numeric (IDs are often stored as strings)\n  new_numeric_name <- paste0(variable_name, \"_numeric\")\n  ds.asNumeric(\n    x.name = full_variable_name, \n    newobj = new_numeric_name, \n    datasources = conns\n  )\n  \n  # Step 3: Convert to boolean (1 if ID exists, 0 if not)\n  ds.Boole(\n    V1 = new_numeric_name, \n    V2 = 0, \n    Boolean.operator = \"!=\", \n    numeric.output = TRUE, \n    na.assign = 0, \n    newobj = variable_name,\n    datasources = conns\n  )\n}\n```\n:::\n\n\n### Convert depression variables to boolean format\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert antenatal depression to boolean\nconvert_to_boolean(\"data\", \"antenatal_depression\", \"condition_occurrence_id\", conns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$is.object.created\n[1] \"A data object <antenatal_depression> has been created in all specified data sources\"\n\n$validity.check\n[1] \"<antenatal_depression> appears valid in all sources\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convert postpartum depression to boolean\nconvert_to_boolean(\"data\", \"postpartum_depression\", \"condition_occurrence_id\", conns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$is.object.created\n[1] \"A data object <postpartum_depression> has been created in all specified data sources\"\n\n$validity.check\n[1] \"<postpartum_depression> appears valid in all sources\"\n```\n\n\n:::\n:::\n\n\n### Check the distribution of the new variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Antenatal depression prevalence\nds.table(\"antenatal_depression\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Data in all studies were valid \n\nStudy 1 :  No errors reported from this study\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$output.list\n$output.list$TABLE_rvar.by.study_row.props\n                    study\nantenatal_depression aphrc\n                  0      1\n                  1      1\n                  NA   NaN\n\n$output.list$TABLE_rvar.by.study_col.props\n                    study\nantenatal_depression     aphrc\n                  0  0.6223404\n                  1  0.3776596\n                  NA 0.0000000\n\n$output.list$TABLE_rvar.by.study_counts\n                    study\nantenatal_depression aphrc\n                  0    117\n                  1     71\n                  NA     0\n\n$output.list$TABLES.COMBINED_all.sources_proportions\nantenatal_depression\n    0     1    NA \n0.622 0.378 0.000 \n\n$output.list$TABLES.COMBINED_all.sources_counts\nantenatal_depression\n  0   1  NA \n117  71   0 \n\n\n$validity.message\n[1] \"Data in all studies were valid\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Postpartum depression prevalence\nds.table(\"postpartum_depression\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Data in all studies were valid \n\nStudy 1 :  No errors reported from this study\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$output.list\n$output.list$TABLE_rvar.by.study_row.props\n                     study\npostpartum_depression aphrc\n                   0      1\n                   1      1\n                   NA   NaN\n\n$output.list$TABLE_rvar.by.study_col.props\n                     study\npostpartum_depression     aphrc\n                   0  0.8297872\n                   1  0.1702128\n                   NA 0.0000000\n\n$output.list$TABLE_rvar.by.study_counts\n                     study\npostpartum_depression aphrc\n                   0    156\n                   1     32\n                   NA     0\n\n$output.list$TABLES.COMBINED_all.sources_proportions\npostpartum_depression\n   0    1   NA \n0.83 0.17 0.00 \n\n$output.list$TABLES.COMBINED_all.sources_counts\npostpartum_depression\n  0   1  NA \n156  32   0 \n\n\n$validity.message\n[1] \"Data in all studies were valid\"\n```\n\n\n:::\n:::\n\n\n# Exercise 7: Understanding Depression Patterns\n\nLet's explore the depression patterns in our data.\n\n## Exercise 7: Understanding Depression Patterns\n\n### Edinburgh Score Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a histogram of Edinburgh scores\nds.assign(\n  toAssign = \"data$edinburgh_postnatal_depression_scale.value_as_number\",\n  newobj = \"edinburgh_score\",\n  datasources = conns\n)\n\n# Edinburgh score distribution\nds.histogram(\"edinburgh_score\", datasources = conns)\n```\n\n::: {.cell-output-display}\n![](omop_exercises_solution_files/figure-html/exercise7-edinburgh-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$breaks\n [1]  0.000000  2.639393  5.278785  7.918178 10.557570 13.196963 15.836356\n [8] 18.475748 21.115141 23.754533 26.393926\n\n$counts\n [1] 22 42 23 49 23 12  6  8  0  0\n\n$density\n [1] 0.04433644 0.08464230 0.04635173 0.09874935 0.04635173 0.02418351\n [7] 0.01209176 0.01612234 0.00000000 0.00000000\n\n$mids\n [1]  1.319696  3.959089  6.598481  9.237874 11.877267 14.516659 17.156052\n [8] 19.795444 22.434837 25.074230\n\n$xname\n[1] \"xvect\"\n\n$equidist\n[1] TRUE\n\nattr(,\"class\")\n[1] \"histogram\"\n```\n\n\n:::\n:::\n\n\n### Edinburgh Score Statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate summary statistics for Edinburgh scores\nmean_score <- ds.mean(\"edinburgh_score\", datasources = conns)\nvar_score <- ds.var(\"edinburgh_score\", datasources = conns)\nquantiles <- ds.quantileMean(\"edinburgh_score\", datasources = conns)\n\nlist(\n  Mean = mean_score$Global.Mean[1],\n  Variance = var_score$Global.Variance[1],\n  Quantiles = quantiles\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Mean\nNULL\n\n$Variance\nNULL\n\n$Quantiles\n       5%       10%       25%       50%       75%       90%       95%      Mean \n 1.000000  2.000000  4.750000  8.000000 11.000000 15.000000 20.000000  8.382979 \n```\n\n\n:::\n:::\n\n\n### Cross-tabulation of Depression Types\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a cross-tabulation of depression types\nds.table(rvar = \"antenatal_depression\", cvar = \"postpartum_depression\", datasources = conns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Data in all studies were valid \n\nStudy 1 :  No errors reported from this study\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$output.list\n$output.list$TABLE.STUDY.aphrc_row.props\n                    postpartum_depression\nantenatal_depression     0     1  NA\n                  0  0.880 0.120   0\n                  1  0.746 0.254   0\n                  NA   NaN   NaN NaN\n\n$output.list$TABLE.STUDY.aphrc_col.props\n                    postpartum_depression\nantenatal_depression    0     1  NA\n                  0  0.66 0.438 NaN\n                  1  0.34 0.562 NaN\n                  NA 0.00 0.000 NaN\n\n$output.list$TABLES.COMBINED_all.sources_row.props\n                    postpartum_depression\nantenatal_depression     0     1  NA\n                  0  0.880 0.120   0\n                  1  0.746 0.254   0\n                  NA   NaN   NaN NaN\n\n$output.list$TABLES.COMBINED_all.sources_col.props\n                    postpartum_depression\nantenatal_depression    0     1  NA\n                  0  0.66 0.438 NaN\n                  1  0.34 0.562 NaN\n                  NA 0.00 0.000 NaN\n\n$output.list$TABLE_STUDY.aphrc_counts\n                    postpartum_depression\nantenatal_depression   0  1 NA\n                  0  103 14  0\n                  1   53 18  0\n                  NA   0  0  0\n\n$output.list$TABLES.COMBINED_all.sources_counts\n                    postpartum_depression\nantenatal_depression   0  1 NA\n                  0  103 14  0\n                  1   53 18  0\n                  NA   0  0  0\n\n\n$validity.message\n[1] \"Data in all studies were valid\"\n```\n\n\n:::\n:::\n\n\n# Exercise 8: Correlation Analysis\n\nLet's explore correlations between variables.\n\n## Exercise 8: Correlation Analysis\n\n### Prepare Variables for Correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create simplified variable names\nds.assign(\"data$employment.value_as_concept_id\", \"employment\", conns)\nds.assign(\"data$number_in_household.value_as_concept_id\", \"household_size\", conns)\n\n# Create a dataset for correlation\nvariable_list <- c(\"edinburgh_score\", \"age\", \"antenatal_depression\", \"postpartum_depression\")\nds.dataFrame(\n  x = variable_list,\n  newobj = \"cor_data\",\n  datasources = conns\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$is.object.created\n[1] \"A data object <cor_data> has been created in all specified data sources\"\n\n$validity.check\n[1] \"<cor_data> appears valid in all sources\"\n```\n\n\n:::\n:::\n\n\n### Correlation Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the correlation matrix\ncor_matrix <- ds.cor(\"cor_data\", datasources = conns)\ncor_matrix\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$aphrc\n$aphrc$`Number of missing values in each variable`\n     edinburgh_score age antenatal_depression postpartum_depression\n[1,]               0   0                    0                     0\n\n$aphrc$`Number of missing values casewise`\n                      edinburgh_score age antenatal_depression\nedinburgh_score                     0   0                    0\nage                                 0   0                    0\nantenatal_depression                0   0                    0\npostpartum_depression               0   0                    0\n                      postpartum_depression\nedinburgh_score                           0\nage                                       0\nantenatal_depression                      0\npostpartum_depression                     0\n\n$aphrc$`Correlation Matrix`\n           [,1]       [,2]      [,3]       [,4]\n[1,] 1.00000000 0.06879505 0.7850084 0.27880736\n[2,] 0.06879505 1.00000000 0.1177770 0.05328698\n[3,] 0.78500837 0.11777698 1.0000000 0.17268133\n[4,] 0.27880736 0.05328698 0.1726813 1.00000000\n\n$aphrc$`Number of complete cases used`\n                      edinburgh_score age antenatal_depression\nedinburgh_score                   188 188                  188\nage                               188 188                  188\nantenatal_depression              188 188                  188\npostpartum_depression             188 188                  188\n                      postpartum_depression\nedinburgh_score                         188\nage                                     188\nantenatal_depression                    188\npostpartum_depression                   188\n```\n\n\n:::\n:::\n\n\n# Exercise 9: Building Statistical Models\n\nNow let's test some hypotheses with statistical models.\n\n## Exercise 9: Building Statistical Models\n\n### Prepare Modeling Dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare all variables\nds.assign(\"data$marital_status.value_as_concept_id\", \"marital_status\", conns)\nds.assign(\"data$religious_affiliation.value_as_concept_id\", \"religion\", conns)\n\n# Create modeling dataset\nmodel_vars <- c(\n  \"edinburgh_score\",\n  \"age\",\n  \"employment\",\n  \"marital_status\",\n  \"household_size\",\n  \"religion\",\n  \"antenatal_depression\",\n  \"postpartum_depression\"\n)\n\nds.cbind(\n  x = model_vars,\n  DataSHIELD.checks = FALSE,\n  newobj = \"model_data\",\n  datasources = conns\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$is.object.created\n[1] \"A data object <model_data> has been created in all specified data sources\"\n\n$validity.check\n[1] \"<model_data> appears valid in all sources\"\n```\n\n\n:::\n:::\n\n\n### Model 1: Simple Linear Regression\n\n**Research question**: Do age and employment affect depression severity?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- ds.glm(\n  formula = \"edinburgh_score ~ age + employment\",\n  data = \"model_data\",\n  family = \"gaussian\",\n  datasources = conns\n)\n\n# NOTE: we use gaussian for the linear regression because edinburgh_score \n# is a continuous variable\n\n# Display results\nmodel1$coefficients[, c(\"Estimate\", \"Std. Error\", \"p-value\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                   Estimate Std. Error    p-value\n(Intercept)                      6.55113468 3.18129582 0.03946875\nage                              0.05435431 0.08149318 0.50478498\nemploymentconcept_id_3000000190 -1.50846406 0.91748499 0.10014947\nemploymentemployed               0.88276561 1.06596101 0.40759087\nemploymentunemployed             1.48222758 1.67422086 0.37598201\n```\n\n\n:::\n:::\n\n\n### Model 2: Logistic Regression\n\n**Research question**: What predicts postpartum depression?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2 <- ds.glm(\n  formula = \"postpartum_depression ~ antenatal_depression + edinburgh_score + age\",\n  data = \"model_data\",\n  family = \"binomial\",\n  datasources = conns\n)\n\n# NOTE: we use binomial for the logistic regression because postpartum_depression \n# is a binary variable\n\n# Display results with odds ratios\ncoef2 <- as.data.frame(model2$coefficients)\ncoef2[, c(\"Estimate\", \"P_OR\", \"low0.95CI.P_OR\", \"high0.95CI.P_OR\", \"p-value\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                        Estimate       P_OR low0.95CI.P_OR high0.95CI.P_OR\n(Intercept)          -3.54563182 0.02804138    0.001179574       0.4134207\nantenatal_depression -0.54101858 0.58215498    0.163605492       2.0714734\nedinburgh_score       0.16500606 1.17940027    1.053754267       1.3200279\nage                   0.01706014 1.01720649    0.935642275       1.1058810\n                         p-value\n(Intercept)          0.029666046\nantenatal_depression 0.403482994\nedinburgh_score      0.004092097\nage                  0.689117964\n```\n\n\n:::\n:::\n\n\n### Model 3: Comprehensive Model\n\n**Research question**: How do social factors influence depression severity?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel3 <- ds.glm(\n  formula = \"edinburgh_score ~ age + employment + marital_status + household_size + antenatal_depression + postpartum_depression\",\n  data = \"model_data\",\n  family = \"gaussian\",\n  datasources = conns\n)\n\n# Display results\ncoef3 <- as.data.frame(model3$coefficients)\ncoef3[, c(\"Estimate\", \"Std. Error\", \"p-value\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                        Estimate Std. Error      p-value\n(Intercept)                          6.092664004 2.48950930 1.439169e-02\nage                                 -0.031171097 0.05047231 5.368469e-01\nemploymentconcept_id_3000000190     -0.726001118 0.56434730 1.982882e-01\nemploymentemployed                   0.260437725 0.65568752 6.912215e-01\nemploymentunemployed                -0.090871853 1.03895956 9.303025e-01\nmarital_statusnever_married          0.468057728 1.01966972 6.462135e-01\nmarital_statusseparated              0.154215495 1.49000551 9.175662e-01\nhousehold_sizeconcept_id_3000000213 -0.003011284 1.73959746 9.986188e-01\nhousehold_sizeconcept_id_3000000214  0.933970491 1.79391906 6.026236e-01\nantenatal_depression                 8.128952822 0.50187602 5.283310e-59\npostpartum_depression                1.947858945 0.63937261 2.315101e-03\n```\n\n\n:::\n:::\n\n\n\n# Challenge: Create Your Own Research Question\n\nThis is just an example of how you can create your own research question:\n\n**Research question**: Does employment modify the effect of antenatal depression?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel4 <- ds.glm(\n  formula = \"edinburgh_score ~ antenatal_depression * employment + age\",\n  data = \"model_data\",\n  family = \"gaussian\",\n  datasources = conns\n)\n\n# Look for interaction terms\ncoef4 <- as.data.frame(model4$coefficients)\ninteraction_terms <- grep(\":\", rownames(coef4), value = TRUE)\nif(length(interaction_terms) > 0) {\n  coef4[interaction_terms, c(\"Estimate\", \"Std. Error\", \"p-value\")]\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                                       Estimate Std. Error\nantenatal_depression:employmentconcept_id_3000000190 -0.5747745   1.210526\nantenatal_depression:employmentemployed              -0.4960371   1.337733\nantenatal_depression:employmentunemployed            -1.3958084   2.091940\n                                                       p-value\nantenatal_depression:employmentconcept_id_3000000190 0.6349197\nantenatal_depression:employmentemployed              0.7107832\nantenatal_depression:employmentunemployed            0.5046242\n```\n\n\n:::\n:::\n\n\n# Clean Up\n\nAlways remember to log out from the servers!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Very important!!!\ndatashield.logout(conns)\n```\n:::\n\n",
    "supporting": [
      "omop_exercises_solution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}