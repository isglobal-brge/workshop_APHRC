---
title: "DataSHIELD OMOP Practical Exercises"
format: 
  html:
    code-copy: false
---

# Practical Exercises: OMOP CDM with DataSHIELD {#omop-exercises}

## Introduction

In this practical exercise, you will learn how to work with OMOP CDM (Observational Medical Outcomes Partnership Common Data Model) data using DataSHIELD. 

You'll be working with a real dataset from the African Population and Health Research Center (APHRC), but we won't tell you what it's about - that's for you to discover! Through systematic exploration, you'll uncover what type of study this was, who the participants were, and what was measured!

### Learning Objectives

By the end of this exercise, you will be able to:

1. Connect to an OMOP database through DataSHIELD
2. Explore OMOP concepts and data structure
3. Retrieve specific clinical and demographic data
4. Transform OMOP data into analyzable format
5. Perform exploratory data analysis
6. Build statistical models with OMOP data

### Prerequisites

Before starting, ensure you have installed:

```r
# Required packages
install.packages(c("DSI", "DSOpal")
devtools::install_github("isglobal-brge/dsOMOPClient")
devtools::install_github("isglobal-brge/dsOMOPHelper")
devtools::install_github("datashield/dsBaseClient")
```

### Server Connection Details

For this tutorial, you'll connect to:

- **Server name:** APHRC
- **Server URL**: https://44.201.204.234:9090
- **Username**: administrator
- **Password**: password
- **Project**: omop
- **Resource**: omop.study_1

::: {.callout-warning}
This server uses a self-signed certificate. You'll need to configure your R session to accept it.
:::

---

## Need Help? 

<a href="omop_exercises_solution.html" target="_blank" class="btn btn-success btn-lg">
<i class="bi bi-lightbulb"></i> View Complete Solution!
</a>

The solution file contains all the code with detailed explanations and outputs to help you understand each step of the analysis.

---

## Exercise 1: Server Connection and Mystery Dataset

Let's start by connecting to the OMOP DataSHIELD server. You're about to explore a mystery dataset - pay attention to clues about what kind of study this might be!

### Task 1.1: Create a Server Connection

Set up the connection to the APHRC DataSHIELD node:

```r
# Load required libraries
library(DSI)
library(DSOpal)
library(dsBaseClient)
library(dsOMOPClient)
library(dsOMOPHelper)

# Configure SSL for self-signed certificates
library(httr)
httr::set_config(httr::config(ssl_verifypeer = 0L, ssl_verifyhost = 0L))

# Create connection
# YOUR CODE HERE:
# Hint: Use newDSLoginBuilder() to start
```

::: {.callout-tip}
**Hint**: You need to:

1. Create a builder with `newDSLoginBuilder()`
2. Add server details with `builder$append()`
3. Build the login data
4. Connect with `datashield.login()`
:::

### Task 1.2: Create dsOMOPHelper Instance

Create a helper object to interact with the OMOP data:

```r
# YOUR CODE HERE:
# Hint: Use ds.omop.helper() with the resource "omop.study_1"
```

### Task 1.3: Explore Initial Data

Check what data is available:

```r
# YOUR CODE HERE:
# Hint: Use ds.summary() on your data symbol
```

---

## Exercise 2: Who Are We Studying?

The OMOP Person table contains demographic information. Let's discover who the participants in this study are.

### Task 2.1: First Clue - Gender Distribution

Check the gender distribution:

```r
# YOUR CODE HERE:
# Hint: Use ds.table() on gender_concept_id column
```

**Question**: What do you notice about the gender distribution? What might this tell you about the study?

### Task 2.2: Second Clue - Age Distribution

Calculate the participants' ages and examine the distribution:

```r
# YOUR CODE HERE:
# Create age = 2025 - year_of_birth
# Then get mean and quantiles
```

**Question**: What is the age range? Combined with the gender information, what type of study might this be?

### Task 2.3: Sample Size

Check how many participants we have:

```r
# YOUR CODE HERE:
# Hint: Use ds.dim()
```

::: {.callout-note}
**Detective Work**: Based on what you've discovered so far:

- All participants share a specific characteristic
- They're in a particular age range
- What life event might they be experiencing?
:::

---

## Exercise 3: What Was Measured?

Now let's discover what data was collected in this study. OMOP organizes data into different domains.

### Task 3.1: Explore Conditions (Diagnoses)

Start with medical conditions:

```r
# YOUR CODE HERE:
# Hint: Use o$concepts("condition_occurrence")
```

**Question**: What conditions are tracked? What does this reveal about the study focus?

### Task 3.2: Explore Measurements

Check what clinical measurements were taken:

```r
# YOUR CODE HERE:
# Hint: Use o$concepts("measurement")
```

**Question**: What scale is being used? What is it designed to measure?

### Task 3.3: Explore Observations

Finally, look at other observations (social/demographic factors):

```r
# YOUR CODE HERE:
# Hint: Use o$concepts("observation")
```

**Question**: What social and demographic factors were collected? Why might these be relevant?

::: {.callout-important}
**The Big Reveal**: By now you should have figured out:

- This is a study of women
- In reproductive age
- Looking at specific mental health conditions
- During a particular life period

Can you name the specific focus of this study?
:::

---

## Exercise 4: Building Your Analysis Dataset

Now that you understand the study, let's retrieve the relevant data for analysis.

### Task 4.1: Start with the Clinical Outcome

Retrieve the main clinical measurement:

```r
# YOUR CODE HERE:
# Hint: Use o$auto() with concept 4164838
# Get the value_as_number column
```

After retrieval, check the data structure with `ds.summary()`.

### Task 4.2: Add Social Determinants

Mental health is influenced by social factors. Retrieve all relevant social variables:

```r
# YOUR CODE HERE:
# Retrieve these concepts from observation table:
# - Employment status (44804285)
# - Marital status (4053609)
# - Number in household (4075500)
# - Religious affiliation (4052017)
# - Education level (42528763)
```

**Question**: Why might these social factors be important for mental health research?

### Task 4.3: Retrieve the Diagnoses

Get the depression diagnoses:

```r
# YOUR CODE HERE:
# Get both conditions you discovered earlier
# Remember: you need the condition_occurrence_id column
```

Check your final data structure. How many variables do you have now?

::: {.callout-tip}
**Expected Variables**: By the end of Exercise 4, you should have:

- Original person table columns (11)
- Edinburgh scale (1)
- Social factors (5)
- Depression diagnoses (2)
- Total: 19 variables
:::

---

## Exercise 5: The Data Transformation Challenge

You've retrieved the data, but there's a problem: condition occurrences are stored as IDs, not as analyzable variables. Let's solve this!

---

## Exercise 6: Creating Analyzable Variables

### Understanding the Challenge

When you look at your data, you'll notice the depression diagnoses are stored as long ID numbers. We need to transform these into simple yes/no (1/0) variables for analysis.

Here's a function that does this transformation:

```r
convert_to_boolean <- function(table, variable_name, id_type, conns) {
  cat(sprintf("Converting %s to boolean...\n", variable_name))
  
  # Step 1: Construct the full variable name
  full_variable_name <- paste0(table, "$", variable_name, ".", id_type)
  
  # Step 2: Convert to numeric (IDs are often strings)
  new_numeric_name <- paste0(variable_name, "_numeric")
  ds.asNumeric(
    x.name = full_variable_name, 
    newobj = new_numeric_name, 
    datasources = conns
  )
  
  # Step 3: Convert to boolean (1 if ID exists, 0 if not)
  ds.Boole(
    V1 = new_numeric_name, 
    V2 = 0, 
    Boolean.operator = "!=", 
    numeric.output = TRUE, 
    na.assign = 0, 
    newobj = variable_name,
    datasources = conns
  )
}
```

### Task 6.1: Transform Your Diagnosis Variables

Convert both depression conditions to boolean:

```r
# YOUR CODE HERE:
# Convert both antenatal_depression and postpartum_depression
```

### Task 6.2: Explore Prevalence

Now check the prevalence of each condition:

```r
# YOUR CODE HERE:
# Use ds.table() on each boolean variable
```

**Question**: What percentage of women experienced each type of depression? Is there an overlap?

---

## Exercise 7: Understanding Depression Patterns

Now let's explore the patterns in the data to understand maternal mental health better.

### Task 7.1: Depression Severity Distribution

First, examine the Edinburgh Scale scores:

```r
# YOUR CODE HERE:
# 1. Create a simpler variable name for Edinburgh scores
# 2. Create a histogram
# 3. Get summary statistics
```

**Question**: What's the typical score? Note that scores â‰¥10 often indicate possible depression.

### Task 7.2: The Timeline Question

Create a cross-tabulation to understand the relationship between antenatal and postpartum depression:

```r
# YOUR CODE HERE:
# Use ds.table() with rvar="antenatal_depression" and cvar="postpartum_depression"
```

**Key Questions**:

1. How many women had depression during pregnancy only?
2. How many developed it only after delivery?
3. How many had depression at both time points?
4. What does this tell us about the progression of maternal depression?

---

## Exercise 8: Finding Risk Factors

Let's investigate what factors might be associated with maternal depression.

### Task 8.1: Prepare Your Analysis Variables

Create a dataset for correlation analysis:

```r
# YOUR CODE HERE:
# Include: edinburgh_score, age, antenatal_depression, postpartum_depression
# Create a data frame with these variables
```

### Task 8.2: Explore Correlations

```r
# YOUR CODE HERE:
# Calculate correlation matrix
```

**Research Questions**:

1. Is younger age associated with higher depression scores?
2. How strong is the link between antenatal and postpartum depression?
3. Does the Edinburgh score correlate with clinical diagnoses?

---

## Exercise 9: Testing Hypotheses with Statistical Models

Now let's test specific hypotheses about maternal depression using statistical models.

### Prepare the Modeling Dataset

First, organize your variables for modeling:

```r
# Simplify variable names
ds.assign("data$employment.value_as_concept_id", "employment", conns)
ds.assign("data$marital_status.value_as_concept_id", "marital_status", conns)
ds.assign("data$number_in_household.value_as_concept_id", "household_size", conns)
ds.assign("data$religious_affiliation.value_as_concept_id", "religion", conns)

# Create modeling dataset
model_vars <- c(
  "edinburgh_score", "age", "employment", "marital_status",
  "household_size", "religion", "antenatal_depression", "postpartum_depression"
)

ds.cbind(
  x = model_vars,
  DataSHIELD.checks = FALSE,
  newobj = "model_data",
  datasources = conns
)
```

### Task 9.1: Hypothesis 1 - Social Support Matters

**Hypothesis**: Women with better social support (employment, larger households) have lower depression scores.

```r
# YOUR CODE HERE:
# Build a linear model: edinburgh_score ~ employment + household_size + marital_status
```

### Task 9.2: Hypothesis 2 - Pregnancy Depression Predicts Postpartum Depression

**Hypothesis**: Depression during pregnancy is the strongest predictor of postpartum depression.

```r
# YOUR CODE HERE:
# Build a logistic model: postpartum_depression ~ antenatal_depression + age + social factors
```

### Task 9.3: Hypothesis 3 - Young Mothers at Higher Risk

**Hypothesis**: Younger mothers are at higher risk for depression.

```r
# YOUR CODE HERE:
# Test if age predicts Edinburgh scores or depression diagnoses
```

::: {.callout-note}
**Reality Check**: In this dataset, we may not find statistically significant results for all hypotheses. This is normal in real research! The important thing is understanding the methodology.
:::

---

## Challenge: Create Your Own Research Question

Based on what you've observed about the data, formulate and test your own hypothesis:

```r
# YOUR CODE HERE:
# Design and run your own analysis
```
